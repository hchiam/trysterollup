import {selfId as a,joinRoom as b} from'trystero/nostr';const{keys:c}=Object;export class GameController{constructor({updateUi:A,keydownListeners:_={},buttonListeners:B={},joystickListeners:d={},generatingDocumentation:e=!1}){this.room=null;this.updateUi=A||function(){};this.localData={players:{[a]:{playerId:0}}};this.debug=!0;this.debugMore=!1;this.gamepads={};this.keydownListeners=_;this.buttonListeners=B;this.joystickListeners=d;!e&&(this.#sendData(this.localData),this.#initializeKeyboardSupport(),this.#initializeGamepadSupport())}#sendData=()=>{};#getData=()=>{};join(){this.debug&&console.log('join');this.room=b(...arguments);const[C,_b]=this.room.makeAction('data');this.#sendData=C;this.#getData=_b;this.#initializeRoomEventListeners();return this.room}startGame(){this.update();return this}update(_a=null){_a&&(this.localData=_a);this.updateUi();this.#sendData(this.localData);return this}updatePosition(D=0,_B=0,_c=a){const{x,y}=this.localData.players[_c];this.localData.players[_c].x=x===void 0?D:+x+ +D;this.localData.players[_c].y=y===void 0?_B:+y+ +_B;this.update();return this}#initializeRoomEventListeners(){this.#signalNewcomers();this.#listenForPeersSendingData();this.#listenForPeersLeaving()}#signalNewcomers(){this.room?.onPeerJoin(_A=>{this.#syncPlayerIdOfIncomingPeer(_A);this.debug&&console.log('onPeerJoin',_A);this.updateUi()})}#listenForPeersSendingData(){this.#getData((E,aA)=>{this.debugMore&&(console.log(`-----|\n\this.localData BEFORE:\n${JSON.stringify(this.localData)}`),console.log('#getData data peerId',JSON.stringify(E),aA));for(const x of Object.entries(E))this.localData[x[0]]=x[1];this.#syncPlayerIdOfIncomingPeer(aA);this.debugMore&&console.log(`this.localData AFTER:\n${JSON.stringify(this.localData)}\n\n|-----`);this.updateUi()})}#syncPlayerIdOfIncomingPeer(aB){var aC=JSON.stringify(this.localData);!(aB in this.localData.players)&&(this.localData.players[aB]={playerId:0});var _C=!isNaN(this.localData.players[aB].playerId)&&this.localData.players[aB].playerId===0;if(_C){var _d=Math.max(...Object.values(this.localData.players).map(x=>isNaN(x.playerId)?0:+x.playerId));this.localData.players[aB].playerId=Math.max(_d+1,c(this.localData.players).length-1);this.#updateHost()}let _e=_C||aC!==JSON.stringify(this.localData);_e&&this.#sendData(this.localData)}#listenForPeersLeaving(){this.room?.onPeerLeave(aD=>{delete this.localData.players[aD];this.debug&&console.log('onPeerLeave',aD);this.#updateHost();this.updateUi()})}#updateHost(){let aE=0;let aF=null;for(const aH of Object.entries(this.localData.players)){var aG=aH[1];aG.isHost=!1;var _D=aG.playerId>aE;_D&&(aE=aG.playerId,aF=aH[0])}this.localData.players[aF].isHost=!0;this.update()}#initializeKeyboardSupport(){document.querySelector('body').addEventListener('keydown',aI=>{switch(aI.key.toLowerCase()) {case 'arrowleft':case 'a':this.keydownListeners?.left?.(aI);break;case 'arrowright':case 'd':this.keydownListeners?.right?.(aI);break;case 'arrowup':case 'w':this.keydownListeners?.up?.(aI);break;case 'arrowdown':case 's':this.keydownListeners?.down?.(aI);break}})}#initializeGamepadSupport(){var aJ='getGamepads' in navigator;aJ&&(window.addEventListener('gamepadconnected',aK=>{if(this.debug)console.log('gamepad connected:',aK.gamepad);setTimeout(()=>this.updateUi(),100)}),window.addEventListener('gamepaddisconnected',aL=>{if(this.debug)console.log('gamepad disconnected:',aL.gamepad);setTimeout(()=>this.updateUi(),100)}),this.#pollGamepads(aM=>{if(aM?.length)this.#mapGamepadToActions(aM[0],{buttonListeners:this.buttonListeners,joystickListeners:this.joystickListeners})}))}#pollGamepads(aN=()=>{}){this.gamepads=navigator.getGamepads().filter(Boolean);aN(this.gamepads);window.requestAnimationFrame(this.#pollGamepads.bind(this,aN))}#mapGamepadToActions(aO,{buttonListeners:aP=[],joystickListeners:aQ=[]}){if(!aO)return;var aR=aO.buttons;if(aR?.length)for(const[i,aS] of aR.entries())if(aS.pressed||aS.touched){var _E=aP[i];_E?.(aS)}var f=aO.axes;if(f?.length)for(const[i,aT] of f.entries()){var g=aQ[i];g?.(aT)}}}
