// trysterollup 0.0.0
import {selfId as a,joinRoom as b} from'trystero/nostr';const{keys:c}=Object;export class GameController{constructor({updateUi:A,buttonListeners:_=[],joystickListeners:B=[],generatingDocumentation:d=!1}){this.room=null;this.updateUi=A||function(){};this.localData={players:{[a]:{playerId:0}}};this.debug=!0;this.debugMore=!1;this.gamepads={};this.buttonListeners=_;this.joystickListeners=B;!d&&(this.#sendData(this.localData),this.#initializeGamepadSupport())}#sendData=()=>{};#getData=()=>{};join(){this.debug&&console.log('join');this.room=b(...arguments);const[C,_b]=this.room.makeAction('data');this.#sendData=C;this.#getData=_b;this.#initializeRoomEventListeners();return this.room}startGame(){this.update();return this}update(_a=null){_a&&(this.localData=_a);this.updateUi();this.#sendData(this.localData);return this}updatePosition(D=0,_B=0,_c=a){const{x,y}=this.localData.players[_c];this.localData.players[_c].x=x===void 0?D:+x+ +D;this.localData.players[_c].y=y===void 0?_B:+y+ +_B;this.update();return this}#initializeRoomEventListeners(){this.#signalNewcomers();this.#listenForPeersSendingData();this.#listenForPeersLeaving()}#signalNewcomers(){this.room?.onPeerJoin(_A=>{this.#syncPlayerIdOfIncomingPeer(_A);this.debug&&console.log('onPeerJoin',_A);this.updateUi()})}#listenForPeersSendingData(){this.#getData((e,E)=>{this.debugMore&&(console.log(`-----|\n\this.localData BEFORE:\n${JSON.stringify(this.localData)}`),console.log('#getData data peerId',JSON.stringify(e),E));for(const x of Object.entries(e))this.localData[x[0]]=x[1];this.#syncPlayerIdOfIncomingPeer(E);this.debugMore&&console.log(`this.localData AFTER:\n${JSON.stringify(this.localData)}\n\n|-----`);this.updateUi()})}#syncPlayerIdOfIncomingPeer(aA){var aB=JSON.stringify(this.localData);!(aA in this.localData.players)&&(this.localData.players[aA]={playerId:0});var _C=!isNaN(this.localData.players[aA].playerId)&&this.localData.players[aA].playerId===0;if(_C){var _d=Math.max(...Object.values(this.localData.players).map(x=>isNaN(x.playerId)?0:+x.playerId));this.localData.players[aA].playerId=Math.max(_d+1,c(this.localData.players).length-1);this.#updateHost()}let _e=_C||aB!==JSON.stringify(this.localData);_e&&this.#sendData(this.localData)}#listenForPeersLeaving(){this.room?.onPeerLeave(aC=>{delete this.localData.players[aC];this.debug&&console.log('onPeerLeave',aC);this.#updateHost();this.updateUi()})}#updateHost(){let aD=0;let aE=null;for(const aG of Object.entries(this.localData.players)){var aF=aG[1];aF.isHost=!1;var _D=aF.playerId>aD;_D&&(aD=aF.playerId,aE=aG[0])}this.localData.players[aE].isHost=!0;this.update()}#initializeGamepadSupport(){var aH='getGamepads' in navigator;aH&&(window.addEventListener('gamepadconnected',aI=>{if(this.debug)console.log('gamepad connected:',aI.gamepad);setTimeout(()=>this.updateUi(),100)}),window.addEventListener('gamepaddisconnected',aJ=>{if(this.debug)console.log('gamepad disconnected:',aJ.gamepad);setTimeout(()=>this.updateUi(),100)}),this.#pollGamepads(aK=>{if(aK?.length)this.#mapGamepadToActions(aK[0],{buttonListeners:this.buttonListeners,joystickListeners:this.joystickListeners})}))}#pollGamepads(aL=()=>{}){this.gamepads=navigator.getGamepads().filter(Boolean);aL(this.gamepads);window.requestAnimationFrame(this.#pollGamepads.bind(this,aL))}#mapGamepadToActions(aM,{buttonListeners:aN=[],joystickListeners:aO=[]}){if(!aM)return;var aP=aM.buttons;if(aP?.length)for(const[i,aQ] of aP.entries())if(aQ.pressed||aQ.touched){var _E=aN[i];_E?.(aQ)}var f=aM.axes;if(f?.length)for(const[i,aR] of f.entries()){var g=aO[i];g?.(aR)}}}
